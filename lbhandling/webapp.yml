---
# This playbook will set up a simple web application. If a change happens to
# the Apache configuration, then we pull it out of the load balancer before
# restarting Apache

# We want to gather information for the load balancers, so we can refer to it.
- hosts: loadbalancer
  tasks: [] # Empty task list.

# We target the web group to deploy our application
- hosts: web
  vars:
    httpd_port: 80
    allow_override: None
  tasks:

    - name: Add DNS1 to file
      lineinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-eth0
        regexp: '^DNS1'
        line: 'DNS1=192.168.200.1'
        insertafter: '^ONBOOT'
      notify:
        - restart NM

    - name: Add DNS2 to file
      lineinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-eth0
        regexp: '^DNS2'
        line: 'DNS2=8.8.8.8'
        insertafter: '^DNS1'
      notify:
        - restart NM

    - name: Add our custom host in hostfile
      lineinfile:
        path: /etc/hosts
        regexp: '^172\.217\.9\.46`'
        line: '172.217.9.46 google.com'

    - name: Install Apache and mod_php
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - httpd
        - mod_php

    - name: Lay down correct config
      template:
        src: templates/httpd.conf.j2
        dest: /etc/httpd/conf/httpd.conf
        owner: root
        group: root
        mode: 0644
      notify:
          - restart app server

    - name: deploy simple index file
      template:
        src: templates/index.html.j2
        dest: /var/www/html/index.html
        owner: root
        group: root
        mode: 0644

    - name: deploy application
      template:
        src: templates/app.php.j2
        dest: /var/www/html/app.php
        owner: root
        group: root
        mode: 0644

    - name: Verify Apache is running.
      service:
        name: httpd
        enabled: Yes
        state: started

  handlers:

    - name: restart NM
      service:
        name: NetworkManager
        state: restarted
      listen: "restart NM"

    - name: Drop out of Load Balancer
      haproxy:
        state: disabled
        backend: web
        host: "{{ ansible_hostname }}"
        socket: /var/lib/haproxy/stats
        wait: Yes
      delegate_to: "{{ item }}"
      with_items: "{{ groups.loadbalancer }}"
      listen: "restart app server"

    - name: Restart Apache
      service:
        name: httpd
        state: restarted
      listen: "restart app server"

    - name: Add back into Load Balancer
      haproxy:
        state: enabled
        backend: web
        host: "{{ ansible_hostname }}"
        socket: /var/lib/haproxy/stats
        wait: Yes
      delegate_to: "{{ item }}"
      with_items: "{{ groups.loadbalancer }}"
      listen: "restart app server"
